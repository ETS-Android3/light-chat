import com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer

buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'java'
}
apply plugin: 'kotlin'



allprojects {
    group = 'com.github.fernthedev'
    version = '1.0-SNAPSHOT'

    project.ext.buildVer = "1.5.2" // Build version
    project.ext.minBuildVer = "1.5.2" // Minimum build
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    ext.netty_ver = "4.1.43.Final"
    ext.jline_ver = "3.13.2"
    ext.log4j_ver = "2.12.1"


    repositories {
        jcenter()
        mavenLocal()
        maven {
            url = 'https://jitpack.io'
        }

        maven {
            url = 'https://oss.sonatype.org/content/groups/public'
        }

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }
    }

    dependencies {
        implementation "io.netty:netty-all:$netty_ver"
        implementation "io.netty:netty-transport-native-epoll:$netty_ver"
        implementation "io.netty:netty-transport-native-kqueue:$netty_ver"
        implementation 'com.lmax:disruptor:3.4.2'
        implementation 'org.apache.commons:commons-lang3:3.8.1'
        implementation 'com.github.Fernthedev:fern-configmanager:1.1.2'
        implementation 'com.google.guava:guava:27.0-jre'
        implementation 'com.googlecode.json-simple:json-simple:1.1'
        implementation 'com.google.code.gson:gson:2.8.1'
        implementation 'com.github.Fernthedev:FernUtils:1.0.0'
        compileOnly 'org.projectlombok:lombok:1.18.4'
        implementation group: 'org.apache.maven', name: 'maven-artifact', version: '3.6.3'
        annotationProcessor 'org.projectlombok:lombok:1.18.4'
    }

    sourceCompatibility = '8'

    java {
        withSourcesJar()
        withJavadocJar()
    }

    processResources {
//        from 'resources'

        inputs.property "version", project.buildVer
        inputs.property "minVersion", project.minBuildVer

        from(sourceSets.main.resources.srcDirs) {
            include 'variables.json'

            // replace version and mcversion
            expand 'version':project.buildVer, 'minVersion':project.minBuildVer
        }

    }

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }


    jar.classifier = 'old'
    shadowJar {
        project.configurations.implementation.canBeResolved = true
        configurations = [project.configurations.implementation]
        classifier = ''
        transform(Log4j2PluginsCacheFileTransformer)
//        transform(Log4j2PluginsCacheFileTransformer)
        minimize() {
            exclude (dependency('io.netty:netty-transport.*:.*') )
            exclude (dependency('log4j:log4j:.*') )
            exclude (dependency('org.apache.logging.log4j:.*:.*') )
            exclude (dependency('org.slf4j:slf4j-api:.*') )
            exclude (dependency('commons-logging:.*:.*') )
            exclude (dependency('com.pi4j:.*:.*') )
            exclude (dependency('org.fusesource.jansi:.*:.*') )
            exclude (dependency('org.jline:.*:.*') )
            exclude (dependency('net.minecrell:.*:.*') )
            exclude (dependency('com.lmax:disruptor:.*'))
            exclude ('.**/Log4j2Plugins.dat' )


        }
    }
}
repositories {
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
